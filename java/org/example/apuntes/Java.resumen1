ATAJOS Y TRUCOS JAVA:
*formatear codigo: ctrl + alt + l
*copilar: ctrl + F9
*iniciar programa: shift/Mayús + F10
*refresca programa: ctrl + F5
*apaga el programa: ctrl + F2


*main / *psvm (siglas)
- Si ponemos "main" o "psvm" nos lo completa
________________________________________________
             main o psvm - resultado:
       public static void main(String[] args){
________________________________________________

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EXPLICACIÓN JAVA:

¿Qué es Java?
Java es un lenguaje de programación orientado a objetos, muy utilizado para
desarrollar aplicaciones móviles, web, de escritorio y sistemas empresariales.
Es conocido por su portabilidad: el mismo código puede ejecutarse en diferentes plataformas.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

1.Programa de introducción que que verifica que todo funcione

public: modificador de acceso
class: palabra clave para definir una clase
"HelloWord": nombre clase

*Ejemplo:
___________________________
public class HelloWorld {
___________________________

Metodo principal (se ejecuta al iniciar el programa):
public: metodo llamado desde cualquier parte
void: este metodo no devuelve ningún valor
main: nombre del metodo principal (java lo busca automáicamente para iniciar programa)
String[] args: parámetro que recibe arreglo de cadenas de textos

*Ejemplo:
_________________________________________
public static void main(String[] args){
_________________________________________

System.out.printIn: instrucción que muestra texto en la consola
    System: clase que proporciona acceso a recursos del sistema
    out: instancia de PrintStream, que permite mostrar datos
    println: Metodo que imprime una línea de texto y luego hace un salto de línea
"Hola mundo": Es el texto que se va a mostrar

*Ejemplo:
___________________________________
System.out.println("Hola mundo");
___________________________________

#EJEMPLO COMPLETO:
________________________________________________
public class HelloWorld {
    public static void main(String[] args){
          System.out.println("Hola mundo");
________________________________________________

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

2.Sentencias y comentarios

Definición de programa: un programa con una secuencia de sentencias
(órdenes) que se ejecutan una tras otra. Cuando ya no quedan sentencias
por ejecutar el programa se acaba.


Sentancia / secuencia de sentancias (statements): unidades básicas de ejecución en un programa Java. Cada sentencia representa
una acción o instrucción que el programa debe realizar.
Comentarios: la línea debe empezar por "//"

·Tipos de sentencias:
 Todas las sentencias en Java terminan con un punto y coma (;),
 excepto las estructuras de control que contienen bloques {}

    1.Sentencia de método: llama a una función
        ______________
          saludar();
        ______________

    2-Sentencia de declaración: define una variable
        ______________
        int edad = 25;
        ______________

    3-Sentencia de asignación: cambia el valor de una variable
        ______________
        edad = 30;
        ______________

    4-Sentencia de control de flujo: dirige la ejecución del programa
        ________________________________________
        if (edad > 18) {
            System.out.println("Mayor de edad");
        }
        ________________________________________

    5-Sentencia de bucle: repite acciones
    ________________________________________
    for (int i = 0; i < 5; i++) {
        System.out.println(i);
    }
    ________________________________________

*Ejemplo:
__________________________________________________________________________________________
public class PrintProgram {
    public static void main(String[] args) {
        // Esto es un comentario

        // Esta sentencia mostrará en pantalla el texto Hola mundo cuando se invoque
        System.out.println("Hola mundo");

        // Esta sentencia mostrará en pantalla el texto Hasta pronto cuando se invoque
        System.out.println("Hasta pronto");
    }
}
__________________________________________________________________________________________

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

3.Variables, tipos y valores



























RESUMEN COMPLETO JAVA (CONTENIDOS AULAVIRTUAL):

1.Hello World
  - Pasos a seguir:
  1.1 Crear el fichero HelloWorld.java
  1.2 Compilar HelloWorld.java
  1.3 Ejecutar HelloWorld.class
--------------------------------------------------------------
1.1#Crear el fichero "HelloWorld.java" con el siguiente contenido

public class HelloWorld {
    public static void main(String[] args){
          System.out.println("Hola mundo");
    }
}
---------------------------------------------------------------
1.2#Compilar el programa
 javac HelloWorld.java
---------------------------------------------------------------
1.3#Ejecutar el programa
 java HelloWorld
---------------------------------------------------------------

Partes del programa:
Este programa está compuesto por una única clase llamada HelloWorld.
Dentro de la misma se ha definido un método main que contiene las sentencias
que se van a ejecutar en este programa. En este caso el programa tiene una única
sentencia System.out.println("Hola mundo"); que sirve para mostrar el texto Hola mundo.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

2.Sentencias y comentarios
------------------------------------------------------------------------------------------
2.1#Comienza el programa ejecutando las sentencias que se encuentren en el método main de
la clase que se esté ejecutando.

public class PrintProgram {
    public static void main(String[] args) {
        // Esto es un comentario

        // Esta sentencia mostrará en pantalla el texto Hola mundo cuando se invoque
        System.out.println("Hola mundo");

        // Esta sentencia mostrará en pantalla el texto Hasta pronto cuando se invoque
        System.out.println("Hasta pronto");
    }
}

#En este caso hay dos sentencias, la primera muestra el texto Hola mundoy la segunda muestra el texto Hasta pronto.
Cuando se ejecute este programa la salida mostrará lo siguiente

Hola mundo
Hasta pronto

Process finished with exit code 0
------------------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

3.Variables, tipos y valores
------------------------------------------------------------------------------------------
3.1#El valor de una variable es el dato concreto que le ha sido asignado, por ejemplo el número 3.

// La siguiente sentencia declara una variable cuyo identificador es myNumber, su tipo
// es int y tiene el valor asignado 3.
int myNumber = 3;
// Cuando se ejecute la siguiente sentencia aparecerá en pantalla un 3
System.out.println(myNumber);
------------------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

4.Identificadores

Las restricciones principales a la hora de darle nombre a una variable son:
    ·No puede haber espacios
    ·Solo se permiten caracteres alfanuméricos (letras y números) y los símbolos $ y _
    ·El primer carácter no puede ser un número
    ·No se puede usar como identificador una palabra reservada de Java (existen 53 palabras
     reservadas como public, class, static...)

------------------------------------------------------------------------------------------
4.1#Algunos nombres de ejemplo

// El nombre de esta varialbe es "my number" que en lower camel case es
   int myNumber = 3;
// Cuando el nombre de una variable es una sola palabra se escribe todo en minúsculas
   int number = 2;
// Cuantas más palabras, más mayúsculas
   int myOtherNumber = 5;
------------------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

5.Tipos básicos

5.1#La siguiente tabla contiene los conocidos como tipos primitivos de Java:

 Tipo  |   Tamaño   |                 Descripción
_____________________________________________________________________________________
byte   |  1 byte    |  Almacena enteros entre -128 y 127
short  |  2 bytes   |  Almacena enteros entre -32,768 y 32,767
int    |  4 bytes   |  Almacena enteros entre -2,147,483,648 y 2,147,483,647
long   |   8 bytes  |  Almacena enteros entre -9,223,372,036,854,775,808 y 9,223,372,036,854,775,807




float

4 bytes

Almacena número con decimales. Permite almacenar con precisiones mínimas de 6 a 7 digitos decimales.

double

8 bytes

Almacena número con decimales. Permite almacenar con precisiones mínimas de 15 digitos decimales.

boolean

1 bit

Almacena valores booleanos (true o false)

char

2 bytes

Almacena un caracter UTF-16



























